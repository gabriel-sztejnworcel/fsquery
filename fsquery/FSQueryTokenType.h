
#ifndef FSQUERYTOKENTYPE_H
#define FSQUERYTOKENTYPE_H

#include <string>

enum FSQueryTokenType
{
	FSQUERY_TOKEN_TYPE_SELECT,
	FSQUERY_TOKEN_TYPE_FROM,
	FSQUERY_TOKEN_TYPE_WHERE,
	FSQUERY_TOKEN_TYPE_ORDER,
	FSQUERY_TOKEN_TYPE_BY,
	FSQUERY_TOKEN_TYPE_AS,
	FSQUERY_TOKEN_TYPE_RECURSIVE,
	FSQUERY_TOKEN_TYPE_AND,
	FSQUERY_TOKEN_TYPE_OR,
	FSQUERY_TOKEN_TYPE_TRUE,
	FSQUERY_TOKEN_TYPE_FALSE,
	FSQUERY_TOKEN_TYPE_LIKE,

	FSQUERY_TOKEN_TYPE_IDENTIFIER,
	FSQUERY_TOKEN_TYPE_NUMBER,
	FSQUERY_TOKEN_TYPE_SINGLE_QUOTED_STRING,

	FSQUERY_TOKEN_TYPE_COMMA,
	FSQUERY_TOKEN_TYPE_ASTERISK,
	FSQUERY_TOKEN_TYPE_DOT,
	FSQUERY_TOKEN_TYPE_LEFT_PAREN,
	FSQUERY_TOKEN_TYPE_RIGHT_PAREN,
	FSQUERY_TOKEN_TYPE_EQUAL,
	FSQUERY_TOKEN_TYPE_NOT_EQUAL,
	FSQUERY_TOKEN_TYPE_LESS_THAN,
	FSQUERY_TOKEN_TYPE_LESS_OR_EQUAL,
	FSQUERY_TOKEN_TYPE_GREATER_THAN,
	FSQUERY_TOKEN_TYPE_GREATER_OR_EQUAL
};

std::string TokenTypeToString(int tokenType);

#endif // FSQUERYTOKENTYPE_H
